# Build stage
FROM golang:latest AS builder
WORKDIR /app

# Install build dependencies
RUN apk add --no-cache git

# Copy only dependency files first for better caching
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build with optimizations
ENV CGO_ENABLED=0 \
    GOOS=linux
RUN go build -ldflags="-w -s" -o app cmd/server/main.go

# Final stage
FROM ghcr.io/typst/typst:v0.13.1 AS typst
FROM alpine:3.20
RUN apk --no-cache add ca-certificates tzdata

WORKDIR /app
COPY --from=builder /app/app .
COPY --from=builder /app/internal/config ./config
COPY --from=builder /app/assets/fonts ./assets/fonts
COPY --from=builder /app/assets/typst-templates ./assets/typst-templates
COPY --from=typst /bin/typst /usr/local/bin/

ENV TZ=UTC 

EXPOSE 8080
CMD ["./app"]